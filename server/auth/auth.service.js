/// <reference path="../server.d.ts" />
'use strict';
var config = require('../config/environment'), jwt = require('jsonwebtoken'), expressJwt = require('express-jwt'), compose = require('composable-middleware'), User = require('../api/user/user.model'), validateJwt = expressJwt({ secret: config.secrets.session });
module.exports = {
    /**
     * Attach the user object to the request if authenticated
     * Otherwise returns 403
     */
    isAuthenticated: function () {
        return compose()
            .use(function (req, res, next) {
            validateJwt(req, res, next);
        })
            .use(function (req, res, next) {
            User.findById(req.user._id, function (err, user) {
                if (err)
                    return next(err);
                if (!user)
                    return res.send(401);
                req.user = user;
                next();
            });
        });
    },
    /**
     * Returns a jwt token, signed by the app secret
     */
    signToken: function (id) {
        return jwt.sign({ _id: id }, config.secrets.session, { expiresInMinutes: 60 * 5 });
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgvYXV0aC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVDQUF1QztBQUN2QyxZQUFZLENBQUM7QUFFYixJQUFJLE1BQU0sR0FBUSxPQUFPLENBQUMsdUJBQXVCLENBQUMsRUFDOUMsR0FBRyxHQUFXLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFDckMsVUFBVSxHQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsRUFDcEMsT0FBTyxHQUFPLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxFQUM5QyxJQUFJLEdBQVUsT0FBTyxDQUFDLHdCQUF3QixDQUFDLEVBQy9DLFdBQVcsR0FBRyxVQUFVLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBRWpFLE1BQU0sQ0FBQyxPQUFPLEdBQUc7SUFFYjs7O09BR0c7SUFDSCxlQUFlLEVBQUU7UUFDYixNQUFNLENBQUMsT0FBTyxFQUFFO2FBQ1gsR0FBRyxDQUFDLFVBQVMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO1lBQ3hCLFdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hDLENBQUMsQ0FBQzthQUNELEdBQUcsQ0FBQyxVQUFTLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSTtZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFVBQVUsR0FBRyxFQUFFLElBQUk7Z0JBQzNDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQztvQkFDSixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUVyQixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztvQkFDTixNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFekIsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7Z0JBQ2hCLElBQUksRUFBRSxDQUFDO1lBQ1gsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVMsRUFBRSxVQUFTLEVBQUU7UUFDbEIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQ1gsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQ1gsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQ3RCLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUMvQixDQUFDO0lBQ04sQ0FBQztDQUVKLENBQUMiLCJmaWxlIjoiYXV0aC9hdXRoLnNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vc2VydmVyLmQudHNcIiAvPlxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY29uZmlnICAgICAgPSByZXF1aXJlKCcuLi9jb25maWcvZW52aXJvbm1lbnQnKSxcbiAgICBqd3QgICAgICAgICA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpLFxuICAgIGV4cHJlc3NKd3QgID0gcmVxdWlyZSgnZXhwcmVzcy1qd3QnKSxcbiAgICBjb21wb3NlICAgICA9IHJlcXVpcmUoJ2NvbXBvc2FibGUtbWlkZGxld2FyZScpLFxuICAgIFVzZXIgICAgICAgID0gcmVxdWlyZSgnLi4vYXBpL3VzZXIvdXNlci5tb2RlbCcpLFxuICAgIHZhbGlkYXRlSnd0ID0gZXhwcmVzc0p3dCh7IHNlY3JldDogY29uZmlnLnNlY3JldHMuc2Vzc2lvbiB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cbiAgICAvKipcbiAgICAgKiBBdHRhY2ggdGhlIHVzZXIgb2JqZWN0IHRvIHRoZSByZXF1ZXN0IGlmIGF1dGhlbnRpY2F0ZWRcbiAgICAgKiBPdGhlcndpc2UgcmV0dXJucyA0MDNcbiAgICAgKi9cbiAgICBpc0F1dGhlbnRpY2F0ZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGNvbXBvc2UoKVxuICAgICAgICAgICAgLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICAgICAgICAgIHZhbGlkYXRlSnd0KHJlcSwgcmVzLCBuZXh0KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgICAgICAgICAgVXNlci5maW5kQnlJZChyZXEudXNlci5faWQsIGZ1bmN0aW9uIChlcnIsIHVzZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycilcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KGVycik7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCF1c2VyKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zZW5kKDQwMSk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgICAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGp3dCB0b2tlbiwgc2lnbmVkIGJ5IHRoZSBhcHAgc2VjcmV0XG4gICAgICovXG4gICAgc2lnblRva2VuOiBmdW5jdGlvbihpZCkge1xuICAgICAgICByZXR1cm4gand0LnNpZ24oXG4gICAgICAgICAgICB7IF9pZDogaWQgfSxcbiAgICAgICAgICAgIGNvbmZpZy5zZWNyZXRzLnNlc3Npb24sXG4gICAgICAgICAgICB7IGV4cGlyZXNJbk1pbnV0ZXM6IDYwICogNSB9XG4gICAgICAgICk7XG4gICAgfVxuXG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
