/// <reference path="../../app.d.ts" />
'use strict';
var RabbitMQ_TestApp;
(function (RabbitMQ_TestApp) {
    var Factories;
    (function (Factories) {
        var Socket;
        (function (Socket) {
            function SocketFactory(socketFactory) {
                var ioSocket = io('', {
                    path: '/socket.io'
                });
                var subs = [];
                var socket = socketFactory({ ioSocket: ioSocket });
                function idMap(items) {
                    return items.map(function (e) { return e._id; });
                }
                return {
                    emit: socket.emit,
                    on: function (pattern, cb) {
                        subs.push(pattern);
                        socket.on(pattern, cb);
                    },
                    clean: function () {
                        subs.forEach(function (sub) { return socket.removeAllListeners(sub); });
                        subs = [];
                    },
                    syncModel: function (model, items) {
                        socket.on(model + ':save', function (doc) {
                            var index = idMap(items).indexOf(doc._id);
                            if (index === -1) {
                                items.push(doc);
                            }
                            else {
                                items.splice(index, 1, doc);
                            }
                        });
                        socket.on(model + ':remove', function (doc) {
                            var index = idMap(items).indexOf(doc._id);
                            if (index !== -1) {
                                items.splice(index, 1);
                            }
                        });
                    },
                    unsyncModel: function (model) {
                        socket.removeAllListeners(model + ':save');
                        socket.removeAllListeners(model + ':remove');
                    }
                };
            }
            SocketFactory.$inject = ['socketFactory'];
            angular.module('rabbitMqTest').factory('Socket', SocketFactory);
        })(Socket = Factories.Socket || (Factories.Socket = {}));
    })(Factories = RabbitMQ_TestApp.Factories || (RabbitMQ_TestApp.Factories = {}));
})(RabbitMQ_TestApp || (RabbitMQ_TestApp = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9zZXJ2aWNlcy9zb2NrZXQvc29ja2V0LnNlcnZpY2UudHMiXSwibmFtZXMiOlsiUmFiYml0TVFfVGVzdEFwcCIsIlJhYmJpdE1RX1Rlc3RBcHAuRmFjdG9yaWVzIiwiUmFiYml0TVFfVGVzdEFwcC5GYWN0b3JpZXMuU29ja2V0IiwiUmFiYml0TVFfVGVzdEFwcC5GYWN0b3JpZXMuU29ja2V0LlNvY2tldEZhY3RvcnkiLCJSYWJiaXRNUV9UZXN0QXBwLkZhY3Rvcmllcy5Tb2NrZXQuU29ja2V0RmFjdG9yeS5pZE1hcCJdLCJtYXBwaW5ncyI6IkFBQUEsdUNBQXVDO0FBQ3ZDLFlBQVksQ0FBQztBQUViLElBQU8sZ0JBQWdCLENBNER0QjtBQTVERCxXQUFPLGdCQUFnQjtJQUFDQSxJQUFBQSxTQUFTQSxDQTREaENBO0lBNUR1QkEsV0FBQUEsU0FBU0E7UUFBQ0MsSUFBQUEsTUFBTUEsQ0E0RHZDQTtRQTVEaUNBLFdBQUFBLE1BQU1BLEVBQUNBLENBQUNBO1lBRXRDQyx1QkFBdUJBLGFBQWFBO2dCQUVoQ0MsSUFBSUEsUUFBUUEsR0FBR0EsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUE7b0JBQ2xCQSxJQUFJQSxFQUFFQSxZQUFZQTtpQkFDckJBLENBQUNBLENBQUNBO2dCQUVIQSxJQUFJQSxJQUFJQSxHQUFHQSxFQUFFQSxDQUFDQTtnQkFFZEEsSUFBSUEsTUFBTUEsR0FBR0EsYUFBYUEsQ0FBQ0EsRUFBRUEsUUFBUUEsRUFBRUEsUUFBUUEsRUFBRUEsQ0FBQ0EsQ0FBQ0E7Z0JBRW5EQSxlQUFlQSxLQUFLQTtvQkFDaEJDLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLEdBQUdBLENBQUNBLFVBQUFBLENBQUNBLElBQUlBLE9BQUFBLENBQUNBLENBQUNBLEdBQUdBLEVBQUxBLENBQUtBLENBQUNBLENBQUNBO2dCQUNqQ0EsQ0FBQ0E7Z0JBRURELE1BQU1BLENBQUNBO29CQUVIQSxJQUFJQSxFQUFFQSxNQUFNQSxDQUFDQSxJQUFJQTtvQkFFakJBLEVBQUVBLEVBQUVBLFVBQUNBLE9BQU9BLEVBQUVBLEVBQUVBO3dCQUNaQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTt3QkFDbkJBLE1BQU1BLENBQUNBLEVBQUVBLENBQUNBLE9BQU9BLEVBQUVBLEVBQUVBLENBQUNBLENBQUNBO29CQUMzQkEsQ0FBQ0E7b0JBRURBLEtBQUtBLEVBQUVBO3dCQUNIQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFBQSxHQUFHQSxJQUFJQSxPQUFBQSxNQUFNQSxDQUFDQSxrQkFBa0JBLENBQUNBLEdBQUdBLENBQUNBLEVBQTlCQSxDQUE4QkEsQ0FBQ0EsQ0FBQ0E7d0JBQ3BEQSxJQUFJQSxHQUFHQSxFQUFFQSxDQUFDQTtvQkFDZEEsQ0FBQ0E7b0JBRURBLFNBQVNBLEVBQUVBLFVBQUNBLEtBQUtBLEVBQUVBLEtBQUtBO3dCQUVwQkEsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsS0FBS0EsR0FBR0EsT0FBT0EsRUFBRUEsVUFBQUEsR0FBR0E7NEJBQzFCQSxJQUFJQSxLQUFLQSxHQUFHQSxLQUFLQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQTs0QkFDMUNBLEVBQUVBLENBQUNBLENBQUNBLEtBQUtBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dDQUNmQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQTs0QkFDcEJBLENBQUNBOzRCQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtnQ0FDSkEsS0FBS0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQ0EsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0E7NEJBQ2hDQSxDQUFDQTt3QkFDTEEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7d0JBRUhBLE1BQU1BLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLEdBQUdBLFNBQVNBLEVBQUVBLFVBQUFBLEdBQUdBOzRCQUM1QkEsSUFBSUEsS0FBS0EsR0FBR0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7NEJBQzFDQSxFQUFFQSxDQUFDQSxDQUFDQSxLQUFLQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtnQ0FDZkEsS0FBS0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7NEJBQzNCQSxDQUFDQTt3QkFDTEEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBRVBBLENBQUNBO29CQUVEQSxXQUFXQSxFQUFFQSxVQUFDQSxLQUFLQTt3QkFDZkEsTUFBTUEsQ0FBQ0Esa0JBQWtCQSxDQUFDQSxLQUFLQSxHQUFHQSxPQUFPQSxDQUFDQSxDQUFDQTt3QkFDM0NBLE1BQU1BLENBQUNBLGtCQUFrQkEsQ0FBQ0EsS0FBS0EsR0FBR0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7b0JBQ2pEQSxDQUFDQTtpQkFDSkEsQ0FBQ0E7WUFDTkEsQ0FBQ0E7WUFFREQsYUFBYUEsQ0FBQ0EsT0FBT0EsR0FBR0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0E7WUFFMUNBLE9BQU9BLENBQUNBLE1BQU1BLENBQUNBLGNBQWNBLENBQUNBLENBQUNBLE9BQU9BLENBQUNBLFFBQVFBLEVBQUVBLGFBQWFBLENBQUNBLENBQUNBO1FBQ3BFQSxDQUFDQSxFQTVEaUNELE1BQU1BLEdBQU5BLGdCQUFNQSxLQUFOQSxnQkFBTUEsUUE0RHZDQTtJQUFEQSxDQUFDQSxFQTVEdUJELFNBQVNBLEdBQVRBLDBCQUFTQSxLQUFUQSwwQkFBU0EsUUE0RGhDQTtBQUFEQSxDQUFDQSxFQTVETSxnQkFBZ0IsS0FBaEIsZ0JBQWdCLFFBNER0QiIsImZpbGUiOiJjbGllbnQvc2VydmljZXMvc29ja2V0L3NvY2tldC5zZXJ2aWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uL2FwcC5kLnRzXCIgLz5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlIFJhYmJpdE1RX1Rlc3RBcHAuRmFjdG9yaWVzLlNvY2tldCB7XG5cbiAgICBmdW5jdGlvbiBTb2NrZXRGYWN0b3J5KHNvY2tldEZhY3RvcnkpOiBJU29ja2V0RmFjdG9yeSB7XG5cbiAgICAgICAgdmFyIGlvU29ja2V0ID0gaW8oJycsIHtcbiAgICAgICAgICAgIHBhdGg6ICcvc29ja2V0LmlvJ1xuICAgICAgICB9KTtcblxuICAgICAgICB2YXIgc3VicyA9IFtdO1xuXG4gICAgICAgIHZhciBzb2NrZXQgPSBzb2NrZXRGYWN0b3J5KHsgaW9Tb2NrZXQ6IGlvU29ja2V0IH0pO1xuXG4gICAgICAgIGZ1bmN0aW9uIGlkTWFwKGl0ZW1zKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbXMubWFwKGUgPT4gZS5faWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcblxuICAgICAgICAgICAgZW1pdDogc29ja2V0LmVtaXQsXG5cbiAgICAgICAgICAgIG9uOiAocGF0dGVybiwgY2IpID0+IHtcbiAgICAgICAgICAgICAgICBzdWJzLnB1c2gocGF0dGVybik7XG4gICAgICAgICAgICAgICAgc29ja2V0Lm9uKHBhdHRlcm4sIGNiKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGNsZWFuOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3Vicy5mb3JFYWNoKHN1YiA9PiBzb2NrZXQucmVtb3ZlQWxsTGlzdGVuZXJzKHN1YikpO1xuICAgICAgICAgICAgICAgIHN1YnMgPSBbXTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHN5bmNNb2RlbDogKG1vZGVsLCBpdGVtcykgPT4ge1xuXG4gICAgICAgICAgICAgICAgc29ja2V0Lm9uKG1vZGVsICsgJzpzYXZlJywgZG9jID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gaWRNYXAoaXRlbXMpLmluZGV4T2YoZG9jLl9pZCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2goZG9jKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zLnNwbGljZShpbmRleCwgMSwgZG9jKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgc29ja2V0Lm9uKG1vZGVsICsgJzpyZW1vdmUnLCBkb2MgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSBpZE1hcChpdGVtcykuaW5kZXhPZihkb2MuX2lkKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB1bnN5bmNNb2RlbDogKG1vZGVsKSA9PiB7XG4gICAgICAgICAgICAgICAgc29ja2V0LnJlbW92ZUFsbExpc3RlbmVycyhtb2RlbCArICc6c2F2ZScpO1xuICAgICAgICAgICAgICAgIHNvY2tldC5yZW1vdmVBbGxMaXN0ZW5lcnMobW9kZWwgKyAnOnJlbW92ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIFNvY2tldEZhY3RvcnkuJGluamVjdCA9IFsnc29ja2V0RmFjdG9yeSddO1xuXG4gICAgYW5ndWxhci5tb2R1bGUoJ3JhYmJpdE1xVGVzdCcpLmZhY3RvcnkoJ1NvY2tldCcsIFNvY2tldEZhY3RvcnkpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
